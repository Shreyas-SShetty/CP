------------Question----------------
It's Valentine's Day in Russia today. as we all know number of girls in Russia is more than number of boys :P hence boys have an extra advantage while choosing girl for the valentine evening. Each boy has certain number of chocolates and each girl has certain number of candies. Now you being the anchor of evening wants to pair all the boys with girls such that the sum of absolute difference between boy's chocolate and girl's candy in a pair is minimized. Ofcourse some of the girls will remain unpaired but that's okay as we are in Russia :P

Input Format
The first line consists of two integers N and M. then follow N integers in second line. Then follow M integers in third line. M >= N

Constraints
1 <= N <= 5000 1 <= M <= 5000 M >= N 1 <= chocolates <= 1000000 1 <= candies <= 1000000

Output Format
The only line which consists of required sum of absolute differences.

Sample Input
2 5
4 5
1 2 3 4 5
Sample Output
0
Explanation
we can pair boy numbered 1 with girl numbered 4 and boy numbered 2 with girl numbered 5

----------------------Explanation----------------
To minimise the difference, we first sort the two arrays so that we can start mapping and hence the differences would be minimum.
After that we iterate over the two arrays and each instance consider two possibilities,
where to pair the ith boy with jth girl or to skip and move on to the next girl.
If we pair , we add the absolute difference of their corresponding chocolate-candy difference. 
We take the minimum of these two possibilities and store it as our current result.


--------------------Code-------------------------


#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
int dp[5005][5005];
int boy[5005];
int girl[5005];

long long int fun(int i,int j,int n,int m)
{
    if(i<n && j==m)
        return 1e9;
    if(i>=n && j==m)
        return 0;
    if(dp[i][j]!=-1)
        return dp[i][j];
    ll op1 = fun(i+1,j+1,n,m) + abs(boy[i]-girl[j]);            //Make pair and move both by one
    ll op2 = fun(i,j+1,n,m);                                    //Try for next girl
    return dp[i][j] = min(op1,op2);
}

int main()
{
    #ifndef ONLINE_JUDGE
   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);
    #endif
    memset(dp,-1,sizeof(dp));
    int n,m;
    cin>>n>>m;
    for(int i=0;i<n;++i)
    cin>>boy[i];
    for(int i=0;i<m;++i)
    cin>>girl[i];

    sort(boy,boy+n);
    sort(girl,girl+m);
    cout<<fun(0,0,n,m)<<"\n";
}
