//#pragma GCC optimize "trapv"
#include<bits/stdc++.h>
//#include<boost/multiprecision/cpp_int.hpp>


#define        fast ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define        f first
#define        s second
#define        eb emplace_back
#define        mp  make_pair
#define        forn(i,n) for(int i=0;i<n;++i)
#define        show(b) for(auto const&x: b) cout<<x<<" "
#define        sshow(b) for(auto x:b) cout<<x<<" "
#define        fix(b,val)   memset(b,val,sizeof(b))
#define        pill(b,n,v)  fill(b,b+n,v)
//#define        itn           int
#define        w(t)     int t;cin>>t;while(t--)
//#define        int        int

using namespace std;
const int N=1e5+5;
const int infi=1e9+7;

  long long int dp[10000][10000];
  long long int a[10000];

void rf()
{
    fast;
    #ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
    #endif
}

 long long int dfs(int i,int j,int y)
{
	if(i>j)
		return -1e9;
	if(i==j)
		return a[i]*y;
	if(dp[i][j])
		return dp[i][j];
    
    int ans = INT_MIN;
    ans = max(dfs(i+1,j,y+1)+a[i]*y,dfs(i,j-1,y+1)+a[j]*y);
    dp[i][j] = ans;
    return dp[i][j];
}

int32_t main()
{
	fast;
	rf();

	int n;
	cin>>n;
	 //  int a[n];
	 //  int dp[n][n];
	forn(i,n)
	cin>>a[i];

    int i=0,j=n-1,y=1;

    cout<<max(dfs(i+1,j,y+1)+a[i]*y,dfs(i,j-1,y+1)+a[j]*y)<<"\n";
}
