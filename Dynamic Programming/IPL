Question - Given an array of n elements , find the maximum sum that can be obtained by selecting elements of the array such that NO THREE 
consecutive elements can be selected.

Trick - Here , we cannot be ascertained that we will use a particular position or not beforehand, so we have to change our base cases in such
a way that we include it as well, we assume that every element will be included . Ans - max(dp[n-3],dp[n-2],dp[n-1]).

CODE-(BOTTOM UP)

#include<bits/stdc++.h>
using namespace std;
long long int dp[1000009],arr[1000009];
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;++i)
	cin>>arr[i];
	dp[1] = arr[1];
	dp[2] = arr[1]+arr[2];
	for(int i=3;i<=n;++i)
	{
		dp[i] = max(dp[i-1],max(dp[i-2]+arr[i],dp[i-3]+arr[i-1]+arr[i]));
	}
	cout<<max(dp[n],dp[n-1],dp[n-2])<<"\n";
}

EXPLAINATION
At any ith position we can 
1) Simply ignore the current element(dp[i-1])
2) Add a[i] to dp[i-2]
3) Add a[i] and a[i-1] to dp[i-3].
4)We dont go beyond it as some element must be selected in the previous three elements.


